[{"title":"2018写给自己","date":"2018-02-22T12:21:12.000Z","path":"2018/02/22/2018写给自己/","text":"2018 —— 愿你做最美好的自己！转眼一年又过去了，2018送给自己八封信，愿时光轻缓，愿微风正好，愿你做最美好的自己。 第一封 —— 关于压力 鸡蛋，从外打破是食物，从内打破是生命。人生亦是，从外打破是压力，从内打破是成长。如果你等待别人打破你，那么你注定成为别人的食物；如果能让自己从内打破，那么你会发现自己的成长相当于一种重生。 第二封 —— 关于读书 读书是一种充实人生的艺术，没有书的人生就像空心的竹子一样，空洞无物。犹太人让孩子们亲吻涂有蜂蜜的书本，是为了让他们记住：书本是甜的，要让甜蜜充满人生就要读书。读书是一本人生最难得的存折，一点一滴地积累，最后你会发现：自己是世界上最富有的人。 第三封 —— 关于人际关系 你可以要求自己守信，但不能要求别人守信；你可以要求自己对人好，但不能期待别人对你好。你怎样对人，并不代表人家就会怎么对你。如果看不透这一点，你只会徒添不必要的烦恼。 第四封 —— 关于孤独 每个人都要经历一段孤独的日子，每段路都有一段独孤的时光。父母不可能一直帮着你，朋友也不可能一直围着你转。孤独不是孤僻，更不是寂寞。经历过孤独的人，内心更坚强，不管处于什么样的环境都能让自己安静，更好地调整状态，面对环境。 第五封 —— 关于修养 看别人不顺眼，是自己修养不够。人愤怒的那一瞬间，智商是零，过一分钟后恢复正常。人的优雅关键在于控制自己的惰绪，用嘴伤害人，是最愚蠢的一种行为。 第六封 —— 关于现实 现实有太多的不如意，就算生活给你的是垃圾，你同样能把垃圾踩在脚底下登上世界之巅。你要把自己逼出最大的潜能，没有人会为你的未来买单，你要么努力向上爬，要么烂在社会最底层的泥里，这就是生活。 第七封 —— 关于自己 一个人经过不同程度的鍛炼，就获得不同程度的修养。好比香料，捣得愈碎，磨得愈细，香得愈浓烈。我们曾如此渴望命运的波澜，到最后才发现：人生最曼妙的风景，竟是内心的淡定与从容。我们曾如此期盼外界的认可，到最后才知道：世界是自己的，与他人毫无关系。 第八封 —— 关于幸福 常有人说，我现在不幸福，等我结了婚或买了房……就幸福了。事实是，幸福的人在哪儿都幸福，不幸福的人在哪儿都不幸福。所以要先培养自己的幸福力，不论发生什么，别人都动不了你的自在开心。这才是真正强大的气场和自信。 幸福的人生，需要三种姿态：对过去，要淡；对现在，要惜；对未来，要信。愿你拥有幸福的能力，做最美好的自己。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"hello blog","date":"2017-10-06T06:21:12.000Z","path":"2017/10/06/hello blog/","text":"Hello blog一直想弄一个自己的博客，去写写自己喜欢的东西，去书写一些工作、学习、生活的琐事，也文字化一些自己在工作中遇到的坑点，努力让自己学着去总结去沉淀，不在以追求结果来要求自己，更多的关注过程的合理性，分析自己思路上存在的问题，知其然知其所以然。学会表达，也学会更好的表达。在网上找了一大堆的方案，最后还是选择用hexo 主题yilia ，博客搭建其实并没有想象的那么难，基于node的页面静态化，以及yml配置，基于markdown的文章编辑形式，让编写也变得容易上手的多，推荐一款在线的markdown编辑器marxi，当然有道云笔记的markdown编辑器也是很好用的，图像化的界面更容易上手。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"spring-security初探","date":"2017-10-04T12:21:12.000Z","path":"2017/10/04/spring-security初探/","text":"spring-security初探对于后台开发来说权限控制是一个后台系统首要考虑的问题，通常来说安全框架的基本要素是认证、授权.所谓认证就是对你身份的认证，识别你这个人的身份，授权就是当你被认证之后对于访问某一资源是否具有相应的的角色或者权限，安全框架无非是围着这个两个核心的功能来搭建。那么问题来了，spring-security是怎么实现这一过程的呢? ##spring-security的工作流程 用户输入用户标识和密码，拦截器（springSecurityFilterChain）拦截用户的输入封装成UsernamePasswordAuthenticationToken。 身份认证器将上一步生成的UsernamePasswordAuthenticationToken，拿到用户名和密码之后进行认证，然后返回一个完整的认证信息，包括身份信息和角色权限信息。 SecurityContextHolder（上下文容器）将上一步的产生的身份信息存储起来（默认是存在ThreadLocal里面），这是一个简单的认证的过程，这个过程完成了身份认证的过程和权限信息的存储，后续进入后续的过滤器进行访问控制。##spring-security的几个核心类的源码分析Authentication1234567891011121314public interface Authentication extends Principal, Serializable &#123; //获取权限列表 Collection&lt;? extends GrantedAuthority&gt; getAuthorities(); //获取密钥 Object getCredentials(); //获取认证的细节信息 Object getDetails(); //获取身份信息 Object getPrincipal(); //当前认证信息是否已经被认证 boolean isAuthenticated(); // 设置认证当前信息 void setAuthenticated(boolean isAuthenticated) throws IllegalArgumentException;","tags":[{"name":"spring-security","slug":"spring-security","permalink":"http://yoursite.com/tags/spring-security/"}]}]